import UIKit

// Задача 1 - Создать структуру Rectangle с 2 свойствами - длина и ширина. Написать методы вычисления периметра и площади
struct Rectangle { // создаем структуру
    // создаем две переменные
    var width = 0
    var lenght = 0
    // пишем функцию которая ничего не принимает и возвращает число
    func square() -> Int {
        // возвращает площадь , Self обращается к переменным внутри структуры
        return self.width * self.lenght
    }
    func perimetr() -> Int {
        
        return (self.width + self.lenght) * 2 // возвращет периметр , Self обращается к переменным внутри структуры
    }
}
var req = Rectangle(width: 3, lenght: 4) // создаем новую структуру с аргументами
print(req.square()) // выводим площадь в консоль


// Задача 2 - Создать структуру Circle с 1 свойством - радиус. Написать функцию, принимающую на вход объект Circle и вычисляющую площадь окружности
import UIKit
import Foundation

struct Circle { // cоздаем структуру
    // создаём переменную
    var radius = 0.0
}
// пишем функцию которая принимает на вход структуру и возвращает Double
func circle(object: Circle) -> Double {
    // возвращаем Площадь
    return Double (3.14 * object.radius * object.radius)
}
// создаем новую структуру с аргументом
var desicion = Circle(radius: 4.0)
// выводим в консоль вызов функции circle которая принимает desicion
print(circle(object: desicion))


// Задача 3 - Создать структуру Human с 2 свойствами - имя и возраст. Создать массив из 20 людей. Написать функцию, принимающую на вход этот массив и печатающую имена людей
import UIKit
import Foundation

struct Human { // cоздаем структуру
    // создаем переменную name в которой присваиваем тип данных String
    var name: String = ""
    // çоздаем переменную age которой присваиваем 0
    var age = 0
}
// создаем пустой массив людей
var array: [Human] = []
// делаем цикл для элемента в диапазоне от 0 до 19
for element in 0..<20 {
    // вставляем в массив человека с его именем
    array.append(Human(name: String(element),
    age:Int.random(in: 1..<100))) // возвраст генерируется свойством random от 1 до 99
}
for i in array{ // цикл для i(человек) в массиве
    print("Name: \(i.name); age: \(i.age)")// выводим имя и возраст

}

// Задача 4 - Написать функцию, печатающую имя самого старшего человека из п.3

func maxAge(arr: [Human]) -> String {
    var maximum = 0
    var nameMax: String = ""
    for i in arr { // по всем элементам массива arr
        if i.age > maximum { // условие если возраст больше чем максимум
            maximum = i.age // maximum присваиваем возраст текущего элемента массива
            nameMax = i.name // nameMax присваиваем имя текущего элемента массива
        }
    }
    return nameMax // возвращаем имя старшего человека
}
print(maxAge(arr: array)) // выводим имя старшего человека из массива array

// 5 задача - Решить задачу из предыдущей домашки - п.7 с помощью структур

struct Run { // создаем структуру
    var name = "" // создаем переменную name
    var time = 0 // создаём переменную time
}
// функция принимает на вход два массива и возвращает стринг
func minmaxrun(names: [String], times: [Int]) -> String {
    // переменная с пустым массивом структур
    var array: [Run] = []
    // цикл для i в диапазоне от 0 до количества элементов names
    for i in 0..<names.count {
        // в пустой массив вставляем структуру где присваиваем переменным name и time равное значения массивов c индексом i
        array.append(Run(name: names[i], time: times[i]))
    }
    // константе max присваиваем имя максимального значения в array и с помощью замыкания сравниваем предыдущий элемент со следующим и через опционал принудительно вытаскиваем имя
    let max = array.max { $0.time < $1.time }!.name
    // константе mim присваиваем имя минимального значения в array и с помощью замыкания сравниваем предыдущий элемент со следующим и через опционал принудительно вытаскиваем имя
    let min = array.min { $0.time < $1.time }!.name
    return ("Slowest: \(min); fastest: \(max)") // возвращаем строку с именами самого медленного и самого быстрого бегуна
}

print(minmaxrun(names:["eight", "one", "two", "three", "zero"],  times:[8, 1, 2, 3, 0])) // выводим в консоль

